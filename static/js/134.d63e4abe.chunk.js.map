{"version":3,"file":"static/js/134.d63e4abe.chunk.js","mappings":"gRAKe,SAASA,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SACrC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAuBjB,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC8BC,EAAAA,EAAAA,IAAiBV,GAD/C,OACQW,EADR,OAEEP,EAAUO,EAAcC,SAF1B,4CADc,sBAKVZ,GALW,WAAD,wBAMZa,EAEH,GAAE,CAACb,KAEF,iCACE,kBAAMc,SAlBW,SAAAC,GACnBA,EAAEC,iBAEED,EAAEE,OAAOjB,YAAYkB,MAAMC,QAC7BpB,EAAgB,CAAEM,MAAOU,EAAEE,OAAOjB,YAAYkB,MAAMC,QAEvD,EAYG,WACE,SAAC,KAAD,CACEC,KAAK,cACLC,KAAK,OACLH,MAAOb,EACPiB,SA5Ba,SAAAP,GACnBT,EAASS,EAAEE,OAAOC,OAClBd,EAAU,GACX,KA2BK,mBAAQiB,KAAK,SAAb,SAAsB,eAExB,wBACGlB,EAAOoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,KAAD,WACE,SAAC,KAAD,CAASC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMrB,GAArC,SACGkB,KAFMD,EADD,QAUnB,C,iUCrDKK,EAAMC,EAAAA,GAAAA,KAAH,+CAGHC,EAAQD,EAAAA,GAAAA,GAAH,wFAKLE,EAAOF,EAAAA,GAAAA,GAAH,oEAIJG,EAAQH,EAAAA,GAAAA,MAAH,gFAKLI,EAAaJ,EAAAA,GAAAA,OAAH,0YAgBVK,EAAYL,EAAAA,GAAAA,IAAH,kLAMTM,EAAQN,EAAAA,GAAAA,IAAH,mGAMLO,EAAYP,EAAAA,GAAAA,IAAH,sFAKTQ,EAAiBR,EAAAA,GAAAA,GAAH,uKAKdS,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,kE,+LCxDhBW,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qDACyBC,IAFjB,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,iBACXM,EADW,mCACuBL,IAFjB,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfnC,EAAgB,mCAAG,WAAMV,GAAN,uFACPyC,EAAAA,EAAAA,IAAA,8BACEzC,EADF,mCACwC0C,IAFjC,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,iBACXM,EADW,2CAC+BL,IAF5B,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAe,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,EAAAA,IAAA,iBACXM,EADW,2CAC+BL,IAFzB,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["pages/Movies.jsx","pages/Pages.styled.jsx","services/API.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, NavLink } from 'react-router-dom';\nimport { getMovieBySearch } from 'services/API';\nimport { Input, Item } from './Pages.styled';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const location = useLocation();\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n    setMovies([]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (e.target.searchQuery.value.trim()) {\n      setSearchParams({ query: e.target.searchQuery.value.trim() });\n    }\n  };\n  useEffect(() => {\n    async function moviesBySearch() {\n      const visibleMovies = await getMovieBySearch(searchQuery);\n      setMovies(visibleMovies.results);\n    }\n    if (searchQuery) {\n      moviesBySearch();\n    }\n  }, [searchQuery]);\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Input\n          name=\"searchQuery\"\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <Item key={id}>\n            <NavLink to={`${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </Item>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst Box = styled.main`\n  padding: 20px 20px;\n`;\nconst Title = styled.h1`\n  font-sise: 20px;\n  font-weight: 700;\n  text-align: center;\n`;\nconst Item = styled.li`\n  font-size: 15px;\n  padding-bottom: 5px;\n`;\nconst Input = styled.input`\n  width: 300px;\n  psdding: 5px;\n  margin-right: 5px;\n`;\nconst ButtonBack = styled.button`\n  display: inline-block;\n  font-size: 16px;\n  color: #000;\n  padding: 5px;\n  margin-bottom: 20px;\n  border: 1px solid black;\n  background-color: transparent;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  cursor: pointer;\n\n\n  &:hover {\n    background-color: grey;`;\nconst Container = styled.div`\n  display: flex;\n  padding: 15px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\nconst Image = styled.img`\n  display: block;\n  height: 400px;\n  width: 100%;\n  object-fit: cover;\n`;\nconst MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n`;\nconst AdditionalList = styled.ul`\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  padding-bottom: 20px;\n`;\nconst StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n`;\nexport {\n  Title,\n  Box,\n  Item,\n  Input,\n  ButtonBack,\n  Container,\n  Image,\n  MovieInfo,\n  AdditionalList,\n  StyledLink,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f839b78354fef4499f7468843ae5a754';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getMovieBySearch = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?query=${searchQuery}&language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["Movies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useState","movies","setMovies","query","setQuery","location","useLocation","useEffect","getMovieBySearch","visibleMovies","results","moviesBySearch","onSubmit","e","preventDefault","target","value","trim","name","type","onChange","map","id","title","to","state","from","Box","styled","Title","Item","Input","ButtonBack","Container","Image","MovieInfo","AdditionalList","StyledLink","NavLink","axios","API_KEY","getTrendingMovies","response","data","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}