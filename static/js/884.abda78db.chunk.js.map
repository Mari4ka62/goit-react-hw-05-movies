{"version":3,"file":"static/js/884.abda78db.chunk.js","mappings":"gRAce,SAASA,IAAgB,IAAD,IACrC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEhDC,EAA+CZ,EAA/CY,MAAOC,EAAwCb,EAAxCa,aAAcC,EAA0Bd,EAA1Bc,SAAUC,EAAgBf,EAAhBe,YAcvC,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BC,EAAAA,EAAAA,IAAgBb,GAF/C,OAEUc,EAFV,OAGIjB,EAASiB,GACTf,EAAUe,EAAahB,OAAOiB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAJhE,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACrB,KAGF,iCACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAYsB,GAAIlB,EAAiBmB,QAAjC,SAA0C,eAE5C,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IAAKb,GAAW,yCAAsCA,GACtDc,IAAKjB,KAEP,UAAC,KAAD,YACE,SAAC,KAAD,UAAQA,KACR,yBAAG,cAAYC,MACf,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,uBAAIZ,WAGR,4BACE,wBAAI,4BACJ,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CAASwB,GAAG,OAAZ,SAAmB,YAErB,SAAC,KAAD,WACE,SAAC,KAAD,CAASA,GAAG,UAAZ,SAAsB,qBAK5B,SAAC,EAAAI,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,QAIP,C,iUCrEKC,EAAMC,EAAAA,GAAAA,KAAH,+CAGHC,EAAQD,EAAAA,GAAAA,GAAH,wFAKLE,EAAOF,EAAAA,GAAAA,GAAH,oEAIJG,EAAQH,EAAAA,GAAAA,MAAH,gFAKLI,EAAaJ,EAAAA,GAAAA,OAAH,0YAgBVK,EAAYL,EAAAA,GAAAA,IAAH,kLAMTM,EAAQN,EAAAA,GAAAA,IAAH,mGAMLO,EAAYP,EAAAA,GAAAA,IAAH,sFAKTQ,EAAiBR,EAAAA,GAAAA,GAAH,uKAKdS,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,kE,+LCxDhBW,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qDACyBC,IAFjB,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAMjB/B,EAAe,mCAAG,WAAMb,GAAN,uFACNwC,EAAAA,EAAAA,IAAA,iBACXxC,EADW,mCACuByC,IAFjB,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfC,EAAgB,mCAAG,WAAMC,GAAN,uFACPN,EAAAA,EAAAA,IAAA,8BACEM,EADF,mCACwCL,IAFjC,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAY,mCAAG,WAAM/C,GAAN,uFACHwC,EAAAA,EAAAA,IAAA,iBACXxC,EADW,2CAC+ByC,IAF5B,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAe,mCAAG,WAAMhD,GAAN,uFACNwC,EAAAA,EAAAA,IAAA,iBACXxC,EADW,2CAC+ByC,IAFzB,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["pages/MovieDetails.jsx","pages/Pages.styled.jsx","services/API.jsx"],"sourcesContent":["import { useState, useEffect, Suspense, useRef } from 'react';\nimport { getMovieDetails } from '../services/API';\nimport { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n  ButtonBack,\n  Container,\n  Image,\n  MovieInfo,\n  AdditionalList,\n  Title,\n  Item,\n  StyledLink,\n} from './Pages.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n\n  const { title, vote_average, overview, poster_path } = movie;\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const visibleMovie = await getMovieDetails(movieId);\n        setMovie(visibleMovie);\n        setGenres(visibleMovie.genres.map(genre => genre.name).join(' '));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <ButtonBack>\n        <StyledLink to={backLinkLocation.current}>Go back</StyledLink>\n      </ButtonBack>\n      <Container>\n        <Image\n          src={poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        ></Image>\n        <MovieInfo>\n          <Title>{title}</Title>\n          <p>User score:{vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </MovieInfo>\n      </Container>\n      <div>\n        <h3>Additional information</h3>\n        <AdditionalList>\n          <Item>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </Item>\n          <Item>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </Item>\n        </AdditionalList>\n      </div>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst Box = styled.main`\n  padding: 20px 20px;\n`;\nconst Title = styled.h1`\n  font-sise: 20px;\n  font-weight: 700;\n  text-align: center;\n`;\nconst Item = styled.li`\n  font-size: 15px;\n  padding-bottom: 5px;\n`;\nconst Input = styled.input`\n  width: 300px;\n  psdding: 5px;\n  margin-right: 5px;\n`;\nconst ButtonBack = styled.button`\n  display: inline-block;\n  font-size: 16px;\n  color: #000;\n  padding: 5px;\n  margin-bottom: 20px;\n  border: 1px solid black;\n  background-color: transparent;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  cursor: pointer;\n\n\n  &:hover {\n    background-color: grey;`;\nconst Container = styled.div`\n  display: flex;\n  padding: 15px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\nconst Image = styled.img`\n  display: block;\n  height: 400px;\n  width: 100%;\n  object-fit: cover;\n`;\nconst MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n`;\nconst AdditionalList = styled.ul`\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  padding-bottom: 20px;\n`;\nconst StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n`;\nexport {\n  Title,\n  Box,\n  Item,\n  Input,\n  ButtonBack,\n  Container,\n  Image,\n  MovieInfo,\n  AdditionalList,\n  StyledLink,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f839b78354fef4499f7468843ae5a754';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getMovieBySearch = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?query=${searchQuery}&language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["MovieDetails","useState","movie","setMovie","genres","setGenres","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","title","vote_average","overview","poster_path","useEffect","getMovieDetails","visibleMovie","map","genre","name","join","console","log","getMovie","to","current","src","alt","Suspense","fallback","Box","styled","Title","Item","Input","ButtonBack","Container","Image","MovieInfo","AdditionalList","StyledLink","NavLink","axios","API_KEY","getTrendingMovies","response","data","getMovieBySearch","searchQuery","getMovieCast","getMovieReviews"],"sourceRoot":""}